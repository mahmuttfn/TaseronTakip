diff --git a/Models/EvrakEnums.cs b/Models/EvrakEnums.cs
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/Models/EvrakEnums.cs

+using System.ComponentModel.DataAnnotations;
+
+namespace TaseronTakip.Models
+{
+    public enum EvrakKategori
+    {
+        Personel = 1,
+        Arac = 2
+    }
+
+    public enum SureBirim
+    {
+        Gun = 1,
+        Ay = 2,
+        Yil = 3
+    }
+}

diff --git a/Models/EvrakTurKural.cs b/Models/EvrakTurKural.cs
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/Models/EvrakTurKural.cs

+using System;
+using System.ComponentModel.DataAnnotations;
+
+namespace TaseronTakip.Models
+{
+    /// <summary>
+    /// Evrak türü bazlı kural tanımı.
+    /// </summary>
+    public class EvrakTurKural
+    {
+        public int Id { get; set; }
+
+        [Required, MaxLength(128)]
+        public string Ad { get; set; } = string.Empty;
+
+        [Required]
+        public EvrakKategori Kategori { get; set; } = EvrakKategori.Personel;
+
+        /// <summary>Belge geçerlilik süresi (0 = sınırsız / uygulanmaz)</summary>
+        [Range(0, 1200)]
+        public int GecerlilikSuresiDeger { get; set; } = 0;
+
+        [Required]
+        public SureBirim GecerlilikSuresiBirim { get; set; } = SureBirim.Ay;
+
+        /// <summary>
+        /// Geçerlilik hesabı belge üzerindeki tarihten mi (ör. rapor tarihi) yoksa onay/kabul tarihinden mi başlasın?
+        /// </summary>
+        public bool BelgeUzerindekiTarihtenHesapla { get; set; } = true;
+
+        /// <summary>Belgenin kendisi son X (gün/ay/yıl) içinde alınmış olmalı mı? (0 = zorunlu değil)</summary>
+        [Range(0, 1200)]
+        public int KaynakBelgeTazelikDeger { get; set; } = 0;
+
+        public SureBirim KaynakBelgeTazelikBirim { get; set; } = SureBirim.Ay;
+
+        public bool TazelikKuraliniZorunluKil { get; set; } = false;
+
+        public bool ZorunluMu { get; set; } = true;                    // giriş için zorunlu
+        [Range(0, 3650)]
+        public int HatirlatmaGunOnce { get; set; } = 7;               // bitmeden kaç gün önce uyar
+
+        [MaxLength(256)]
+        public string? Aciklama { get; set; }                         // tek satır not
+        [MaxLength(128)]
+        public string? KabulEdilenUzantilarCsv { get; set; } = "pdf,jpg,png";
+        [Range(0, 10240)]
+        public int? MaxDosyaBoyutuMb { get; set; } = 10;
+        [Range(1, 10)]
+        public int MinDosyaAdedi { get; set; } = 1;
+
+        public bool TekilBelgeMi { get; set; } = true;                // kişi/araç başına 1 aktif belge
+        public bool EDevlettenAlinmaliMi { get; set; } = false;       // e-Devlet zorunlu mu
+        public bool BarkodQrZorunluMu { get; set; } = false;          // doğrulama için
+        public bool PlakaZorunluMu { get; set; } = false;             // araç evraklarında
+        public bool TCKNZorunluMu { get; set; } = false;              // personel evraklarında
+
+        public bool Pasif { get; set; } = false;
+        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
+        public DateTime? UpdatedAt { get; set; }
+    }
+}

diff --git a/Pages/EvrakTurleriKurallar.cshtml b/Pages/EvrakTurleriKurallar.cshtml
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/Pages/EvrakTurleriKurallar.cshtml

+@page "{id?}"
+@model TaseronTakip.Pages.EvrakTurleriKurallarModel
+@using TaseronTakip.Models
+@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
+@{
+    ViewData["Title"] = "Evrak Türleri & Kurallar";
+}
+
+<h2 class="mb-3">Evrak Türleri &amp; Kurallar</h2>
+
+<div class="row g-4">
+    <div class="col-lg-5">
+        <div class="card p-3">
+            <h5 class="mb-3">@(Model.Input.Id > 0 ? "Düzenle" : "Yeni Kural")</h5>
+
+            <form method="post" asp-page-handler="@(Model.Input.Id > 0 ? "Edit" : "Create")">
+                <input type="hidden" asp-for="Input.Id" />
+
+                <div class="mb-2">
+                    <label asp-for="Input.Ad" class="form-label"></label>
+                    <input asp-for="Input.Ad" class="form-control" />
+                    <span asp-validation-for="Input.Ad" class="text-danger"></span>
+                </div>
+
+                <div class="mb-2">
+                    <label asp-for="Input.Kategori" class="form-label"></label>
+                    <select asp-for="Input.Kategori" class="form-select"
+                            asp-items="Html.GetEnumSelectList<EvrakKategori>()"></select>
+                </div>
+
+                <fieldset class="border rounded p-2 mb-2">
+                    <legend class="float-none w-auto fs-6">Geçerlilik</legend>
+                    <div class="row g-2">
+                        <div class="col-6">
+                            <label asp-for="Input.GecerlilikSuresiDeger" class="form-label"></label>
+                            <input asp-for="Input.GecerlilikSuresiDeger" class="form-control" type="number" min="0" />
+                            <span class="form-text">0 = sınırsız / uygulanmaz</span>
+                        </div>
+                        <div class="col-6">
+                            <label asp-for="Input.GecerlilikSuresiBirim" class="form-label"></label>
+                            <select asp-for="Input.GecerlilikSuresiBirim" class="form-select"
+                                    asp-items="Html.GetEnumSelectList<SureBirim>()"></select>
+                        </div>
+                        <div class="col-12 form-check mt-1">
+                            <input asp-for="Input.BelgeUzerindekiTarihtenHesapla" class="form-check-input" />
+                            <label asp-for="Input.BelgeUzerindekiTarihtenHesapla" class="form-check-label"></label>
+                        </div>
+                    </div>
+                </fieldset>
+
+                <fieldset class="border rounded p-2 mb-2">
+                    <legend class="float-none w-auto fs-6">Tazelik Kuralı</legend>
+                    <div class="row g-2">
+                        <div class="col-6">
+                            <label asp-for="Input.KaynakBelgeTazelikDeger" class="form-label"></label>
+                            <input asp-for="Input.KaynakBelgeTazelikDeger" class="form-control" type="number" min="0" />
+                            <span class="form-text">Örn: SGK hizmet dökümü için 1</span>
+                        </div>
+                        <div class="col-6">
+                            <label asp-for="Input.KaynakBelgeTazelikBirim" class="form-label"></label>
+                            <select asp-for="Input.KaynakBelgeTazelikBirim" class="form-select"
+                                    asp-items="Html.GetEnumSelectList<SureBirim>()"></select>
+                        </div>
+                        <div class="col-12 form-check mt-1">
+                            <input asp-for="Input.TazelikKuraliniZorunluKil" class="form-check-input" />
+                            <label asp-for="Input.TazelikKuraliniZorunluKil" class="form-check-label"></label>
+                        </div>
+                    </div>
+                </fieldset>
+
+                <fieldset class="border rounded p-2 mb-2">
+                    <legend class="float-none w-auto fs-6">Ek Kurallar</legend>
+                    <div class="row g-2">
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.ZorunluMu" class="form-check-input" />
+                            <label asp-for="Input.ZorunluMu" class="form-check-label"></label>
+                        </div>
+                        <div class="col-6">
+                            <label asp-for="Input.HatirlatmaGunOnce" class="form-label"></label>
+                            <input asp-for="Input.HatirlatmaGunOnce" class="form-control" type="number" min="0" />
+                        </div>
+
+                        <div class="col-12">
+                            <label asp-for="Input.KabulEdilenUzantilarCsv" class="form-label"></label>
+                            <input asp-for="Input.KabulEdilenUzantilarCsv" class="form-control" />
+                        </div>
+
+                        <div class="col-6">
+                            <label asp-for="Input.MaxDosyaBoyutuMb" class="form-label"></label>
+                            <input asp-for="Input.MaxDosyaBoyutuMb" class="form-control" type="number" min="0" />
+                        </div>
+                        <div class="col-6">
+                            <label asp-for="Input.MinDosyaAdedi" class="form-label"></label>
+                            <input asp-for="Input.MinDosyaAdedi" class="form-control" type="number" min="1" />
+                        </div>
+
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.TekilBelgeMi" class="form-check-input" />
+                            <label asp-for="Input.TekilBelgeMi" class="form-check-label"></label>
+                        </div>
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.EDevlettenAlinmaliMi" class="form-check-input" />
+                            <label asp-for="Input.EDevlettenAlinmaliMi" class="form-check-label"></label>
+                        </div>
+
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.BarkodQrZorunluMu" class="form-check-input" />
+                            <label asp-for="Input.BarkodQrZorunluMu" class="form-check-label"></label>
+                        </div>
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.Pasif" class="form-check-input" />
+                            <label asp-for="Input.Pasif" class="form-check-label"></label>
+                        </div>
+
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.PlakaZorunluMu" class="form-check-input" />
+                            <label asp-for="Input.PlakaZorunluMu" class="form-check-label"></label>
+                        </div>
+                        <div class="col-6 form-check">
+                            <input asp-for="Input.TCKNZorunluMu" class="form-check-input" />
+                            <label asp-for="Input.TCKNZorunluMu" class="form-check-label"></label>
+                        </div>
+
+                        <div class="col-12">
+                            <label asp-for="Input.Aciklama" class="form-label"></label>
+                            <input asp-for="Input.Aciklama" class="form-control" />
+                        </div>
+                    </div>
+                </fieldset>
+
+                <div class="mt-2 d-flex gap-2">
+                    <button class="btn btn-primary" type="submit">
+                        @(Model.Input.Id > 0 ? "Güncelle" : "Ekle")
+                    </button>
+                    @if (Model.Input.Id > 0)
+                    {
+                        <a class="btn btn-secondary" href="/EvrakTurleriKurallar">Yeni</a>
+                    }
+                </div>
+            </form>
+        </div>
+    </div>
+
+    <div class="col-lg-7">
+        <div class="card p-3">
+            <h5 class="mb-3">Kayıtlar</h5>
+
+            <div class="table-responsive">
+                <table class="table table-sm align-middle">
+                    <thead>
+                        <tr>
+                            <th>Ad</th>
+                            <th>Kat.</th>
+                            <th>Geçerlilik</th>
+                            <th>Tazelik</th>
+                            <th>Zor.</th>
+                            <th>Durum</th>
+                            <th style="width:180px;">İşlem</th>
+                        </tr>
+                    </thead>
+                    <tbody>
+                    @foreach (var k in Model.Kayitlar)
+                    {
+                        <tr>
+                            <td>@k.Ad</td>
+                            <td>@k.Kategori</td>
+                            <td>
+                                @(k.GecerlilikSuresiDeger == 0
+                                  ? "—"
+                                  : $"{k.GecerlilikSuresiDeger} {k.GecerlilikSuresiBirim}")
+                                @(k.BelgeUzerindekiTarihtenHesapla ? " (Belge tarihi)" : " (Onay tarihi)")
+                            </td>
+                            <td>
+                                @(k.KaynakBelgeTazelikDeger == 0
+                                  ? "—"
+                                  : $"Son {k.KaynakBelgeTazelikDeger} {k.KaynakBelgeTazelikBirim}")
+                                @(k.TazelikKuraliniZorunluKil ? " [Zorunlu]" : "")
+                            </td>
+                            <td>@(k.ZorunluMu ? "Evet" : "Hayır")</td>
+                            <td>@(k.Pasif ? "Pasif" : "Aktif")</td>
+                            <td>
+                                <div class="d-flex gap-2">
+                                    <a class="btn btn-sm btn-outline-primary"
+                                       href="/EvrakTurleriKurallar/@k.Id">Düzenle</a>
+
+                                    <form method="post" asp-page-handler="Toggle" class="d-inline">
+                                        <input type="hidden" name="id" value="@k.Id" />
+                                        <button class="btn btn-sm btn-outline-warning" type="submit">
+                                            @(k.Pasif ? "Aktif Et" : "Pasifleştir")
+                                        </button>
+                                    </form>
+
+                                    <form method="post" asp-page-handler="Delete" class="d-inline"
+                                          onsubmit="return confirm('Silinsin mi?');">
+                                        <input type="hidden" name="id" value="@k.Id" />
+                                        <button class="btn btn-sm btn-outline-danger" type="submit">Sil</button>
+                                    </form>
+                                </div>
+                            </td>
+                        </tr>
+                    }
+                    </tbody>
+                </table>
+            </div>
+
+            <div class="small text-muted">
+                Örnek kullanım: <b>SGK Hizmet Dökümü</b> için “Tazelik=1 Ay, Zorunlu”; 
+                <b>Adli Sicil Kaydı</b> için “Tazelik=6 Ay”; <b>Ehliyet</b> için “Geçerlilik=5 Yıl” gibi.
+            </div>
+        </div>
+    </div>
+</div>
+
+@section Scripts{
+    <partial name="_ValidationScriptsPartial" />
+}

diff --git a/Pages/EvrakTurleriKurallar.cshtml.cs b/Pages/EvrakTurleriKurallar.cshtml.cs
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/Pages/EvrakTurleriKurallar.cshtml.cs

+using Microsoft.AspNetCore.Mvc;
+using Microsoft.AspNetCore.Mvc.RazorPages;
+using System;
+using System.Collections.Generic;
+using System.ComponentModel.DataAnnotations;
+using System.Linq;
+using TaseronTakip.Models;
+
+namespace TaseronTakip.Pages
+{
+    public class EvrakTurleriKurallarModel : PageModel
+    {
+        private readonly AppDbContext _db;
+
+        public EvrakTurleriKurallarModel(AppDbContext db)
+        {
+            _db = db;
+        }
+
+        public IList<EvrakTurKural> Kayitlar { get; set; } = new List<EvrakTurKural>();
+
+        [BindProperty]
+        public EvrakTurInput Input { get; set; } = new();
+
+        public void OnGet(int? id)
+        {
+            Kayitlar = _db.EvrakTurKurallari
+                          .OrderBy(x => x.Kategori)
+                          .ThenBy(x => x.Ad)
+                          .ToList();
+
+            if (id.HasValue)
+            {
+                var ent = _db.EvrakTurKurallari.Find(id.Value);
+                if (ent != null) Input = EvrakTurInput.FromEntity(ent);
+            }
+        }
+
+        public IActionResult OnPostCreate()
+        {
+            Kayitlar = _db.EvrakTurKurallari.OrderBy(x => x.Kategori).ThenBy(x => x.Ad).ToList();
+            if (!ModelState.IsValid) return Page();
+
+            var entity = Input.ToEntity();
+            _db.EvrakTurKurallari.Add(entity);
+            _db.SaveChanges();
+            return RedirectToPage();
+        }
+
+        public IActionResult OnPostEdit()
+        {
+            Kayitlar = _db.EvrakTurKurallari.OrderBy(x => x.Kategori).ThenBy(x => x.Ad).ToList();
+            if (!ModelState.IsValid) return Page();
+
+            var ent = _db.EvrakTurKurallari.Find(Input.Id);
+            if (ent == null) return NotFound();
+
+            Input.ApplyTo(ent);
+            ent.UpdatedAt = DateTime.UtcNow;
+            _db.SaveChanges();
+            return RedirectToPage();
+        }
+
+        public IActionResult OnPostDelete(int id)
+        {
+            var ent = _db.EvrakTurKurallari.Find(id);
+            if (ent == null) return NotFound();
+
+            _db.EvrakTurKurallari.Remove(ent);
+            _db.SaveChanges();
+            return RedirectToPage();
+        }
+
+        public IActionResult OnPostToggle(int id)
+        {
+            var ent = _db.EvrakTurKurallari.Find(id);
+            if (ent == null) return NotFound();
+
+            ent.Pasif = !ent.Pasif;
+            ent.UpdatedAt = DateTime.UtcNow;
+            _db.SaveChanges();
+            return RedirectToPage();
+        }
+
+        // --- ViewModel ---
+        public class EvrakTurInput
+        {
+            public int Id { get; set; }
+
+            [Required, MaxLength(128)]
+            public string Ad { get; set; } = string.Empty;
+
+            [Required]
+            public EvrakKategori Kategori { get; set; } = EvrakKategori.Personel;
+
+            [Range(0, 1200)]
+            public int GecerlilikSuresiDeger { get; set; } = 0;
+
+            [Required]
+            public SureBirim GecerlilikSuresiBirim { get; set; } = SureBirim.Ay;
+
+            public bool BelgeUzerindekiTarihtenHesapla { get; set; } = true;
+
+            [Range(0, 1200)]
+            public int KaynakBelgeTazelikDeger { get; set; } = 0;
+            public SureBirim KaynakBelgeTazelikBirim { get; set; } = SureBirim.Ay;
+            public bool TazelikKuraliniZorunluKil { get; set; } = false;
+
+            public bool ZorunluMu { get; set; } = true;
+            [Range(0, 3650)]
+            public int HatirlatmaGunOnce { get; set; } = 7;
+
+            [MaxLength(256)]
+            public string? Aciklama { get; set; }
+            [MaxLength(128)]
+            public string? KabulEdilenUzantilarCsv { get; set; } = "pdf,jpg,png";
+            [Range(0, 10240)]
+            public int? MaxDosyaBoyutuMb { get; set; } = 10;
+            [Range(1, 10)]
+            public int MinDosyaAdedi { get; set; } = 1;
+
+            public bool TekilBelgeMi { get; set; } = true;
+            public bool EDevlettenAlinmaliMi { get; set; } = false;
+            public bool BarkodQrZorunluMu { get; set; } = false;
+            public bool PlakaZorunluMu { get; set; } = false;
+            public bool TCKNZorunluMu { get; set; } = false;
+
+            public bool Pasif { get; set; } = false;
+
+            // helpers
+            public EvrakTurKural ToEntity()
+            {
+                return new EvrakTurKural
+                {
+                    Ad = Ad.Trim(),
+                    Kategori = Kategori,
+                    GecerlilikSuresiDeger = GecerlilikSuresiDeger,
+                    GecerlilikSuresiBirim = GecerlilikSuresiBirim,
+                    BelgeUzerindekiTarihtenHesapla = BelgeUzerindekiTarihtenHesapla,
+                    KaynakBelgeTazelikDeger = KaynakBelgeTazelikDeger,
+                    KaynakBelgeTazelikBirim = KaynakBelgeTazelikBirim,
+                    TazelikKuraliniZorunluKil = TazelikKuraliniZorunluKil,
+                    ZorunluMu = ZorunluMu,
+                    HatirlatmaGunOnce = HatirlatmaGunOnce,
+                    Aciklama = Aciklama,
+                    KabulEdilenUzantilarCsv = KabulEdilenUzantilarCsv,
+                    MaxDosyaBoyutuMb = MaxDosyaBoyutuMb,
+                    MinDosyaAdedi = MinDosyaAdedi,
+                    TekilBelgeMi = TekilBelgeMi,
+                    EDevlettenAlinmaliMi = EDevlettenAlinmaliMi,
+                    BarkodQrZorunluMu = BarkodQrZorunluMu,
+                    PlakaZorunluMu = PlakaZorunluMu,
+                    TCKNZorunluMu = TCKNZorunluMu,
+                    Pasif = Pasif
+                };
+            }
+
+            public static EvrakTurInput FromEntity(EvrakTurKural e)
+            {
+                return new EvrakTurInput
+                {
+                    Id = e.Id,
+                    Ad = e.Ad,
+                    Kategori = e.Kategori,
+                    GecerlilikSuresiDeger = e.GecerlilikSuresiDeger,
+                    GecerlilikSuresiBirim = e.GecerlilikSuresiBirim,
+                    BelgeUzerindekiTarihtenHesapla = e.BelgeUzerindekiTarihtenHesapla,
+                    KaynakBelgeTazelikDeger = e.KaynakBelgeTazelikDeger,
+                    KaynakBelgeTazelikBirim = e.KaynakBelgeTazelikBirim,
+                    TazelikKuraliniZorunluKil = e.TazelikKuraliniZorunluKil,
+                    ZorunluMu = e.ZorunluMu,
+                    HatirlatmaGunOnce = e.HatirlatmaGunOnce,
+                    Aciklama = e.Aciklama,
+                    KabulEdilenUzantilarCsv = e.KabulEdilenUzantilarCsv,
+                    MaxDosyaBoyutuMb = e.MaxDosyaBoyutuMb,
+                    MinDosyaAdedi = e.MinDosyaAdedi,
+                    TekilBelgeMi = e.TekilBelgeMi,
+                    EDevlettenAlinmaliMi = e.EDevlettenAlinmaliMi,
+                    BarkodQrZorunluMu = e.BarkodQrZorunluMu,
+                    PlakaZorunluMu = e.PlakaZorunluMu,
+                    TCKNZorunluMu = e.TCKNZorunluMu,
+                    Pasif = e.Pasif
+                };
+            }
+
+            public void ApplyTo(EvrakTurKural e)
+            {
+                e.Ad = Ad.Trim();
+                e.Kategori = Kategori;
+                e.GecerlilikSuresiDeger = GecerlilikSuresiDeger;
+                e.GecerlilikSuresiBirim = GecerlilikSuresiBirim;
+                e.BelgeUzerindekiTarihtenHesapla = BelgeUzerindekiTarihtenHesapla;
+                e.KaynakBelgeTazelikDeger = KaynakBelgeTazelikDeger;
+                e.KaynakBelgeTazelikBirim = KaynakBelgeTazelikBirim;
+                e.TazelikKuraliniZorunluKil = TazelikKuraliniZorunluKil;
+                e.ZorunluMu = ZorunluMu;
+                e.HatirlatmaGunOnce = HatirlatmaGunOnce;
+                e.Aciklama = Aciklama;
+                e.KabulEdilenUzantilarCsv = KabulEdilenUzantilarCsv;
+                e.MaxDosyaBoyutuMb = MaxDosyaBoyutuMb;
+                e.MinDosyaAdedi = MinDosyaAdedi;
+                e.TekilBelgeMi = TekilBelgeMi;
+                e.EDevlettenAlinmaliMi = EDevlettenAlinmaliMi;
+                e.BarkodQrZorunluMu = BarkodQrZorunluMu;
+                e.PlakaZorunluMu = PlakaZorunluMu;
+                e.TCKNZorunluMu = TCKNZorunluMu;
+                e.Pasif = Pasif;
+            }
+        }
+    }
+}
